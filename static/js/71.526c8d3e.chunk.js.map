{"version":3,"file":"static/js/71.526c8d3e.chunk.js","mappings":"0SAgBe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA4CC,EAAAA,EAAAA,MAA5C,eAAOC,EAAP,YAAoBC,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,SAC/BC,EAAAA,EAAAA,YAAU,WACRD,GAAWE,EAAAA,GAAAA,MAAY,+BACtB,CAACH,EAAWC,IAEf,IAAMG,EAAoB,SAAC,GAAwC,IAAD,IAArCC,cAAiBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAClD,OAAQD,GACN,IAAK,QACHX,EAASY,GACT,MACF,IAAK,WACHV,EAAYU,GACZ,MACF,QACE,SAcFC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAMf,OACE,UAAC,KAAD,CACEC,KAAM,QACNC,MAAO,SACPC,QAAS,SACTC,IAAIC,EAAAA,EAAAA,IAAkB,UAAW,YAJnC,UAMGhB,IAAa,SAAC,KAAD,CAAUiB,GAAG,YAAYC,SAAS,KAEhD,UAAC,KAAD,CAAOC,QAAS,EAAGC,GAAI,OAAQC,KAAM,KAAMC,GAAI,GAAIC,GAAI,EAAvD,WACE,SAAC,KAAD,CAAOV,MAAO,SAAd,UACE,SAAC,KAAD,CAASW,SAAU,MAAOC,MAAO,WAAjC,wCAIF,SAAC,KAAD,CACEC,GAAG,OACHC,QAAS,KACTZ,IAAIC,EAAAA,EAAAA,IAAkB,QAAS,YAC/BY,UAAW,KACXC,EAAG,EACHC,aAAa,MACbC,SAvCa,SAAAC,GACnBA,EAAEC,iBACFlC,EAAU,CACRL,MAAOA,EACPE,SAAUA,IAEZD,EAAS,IACTE,EAAY,KAyBR,UASE,UAAC,KAAD,CAAOsB,QAAS,EAAhB,WACE,UAAC,KAAD,CAAae,GAAG,QAAhB,WACE,SAAC,KAAD,6BACA,SAAC,KAAD,CACEC,KAAK,QACLC,QAAQ,2EACRC,UAAQ,EACRC,SAAUlC,EACVE,KAAK,QACLC,MAAOb,QAGX,UAAC,KAAD,CAAawC,GAAG,WAAhB,WACE,SAAC,KAAD,wBACA,SAAC,KAAD,CACEC,KAAK,WACLG,SAAUlC,EACVG,MAAOX,EACPU,KAAK,iBAGT,UAAC,KAAD,CAAOa,QAAS,GAAhB,WACE,SAAC,KAAD,CACEoB,UAAU7C,IAASE,EACnBuC,KAAK,SACLpB,GAAI,WACJU,MAAO,QACPe,OAAQ,CACNzB,GAAI,YANR,sBAWA,SAAC,KAAD,CACE0B,UAAW,CAAEC,KAAM,SAAUC,GAAI,OACjC9B,MAAO,QACPC,QAAS,SAHX,UAKE,SAAC,KAAD,CACEqB,KAAK,SACLS,QApED,WAAO,IAAD,EACnBpC,GAAiB,OAARE,QAAQ,IAARA,GAAA,UAAAA,EAAUmC,aAAV,eAAiBC,OAAQ,MAoEpBC,YAAY,OACZC,QAAQ,UAJV","sources":["views/SignInView.jsx"],"sourcesContent":["import {\n  Flex,\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  Stack,\n  Button,\n  Heading,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { toast } from 'react-toastify';\nimport { useState, useEffect } from 'react';\nimport { Navigate, useNavigate, useLocation } from 'react-router-dom';\nimport { useUserLoginMutation } from 'redux/AuthApi';\n\nexport default function LoginView() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userLogin, { isSuccess, isError }] = useUserLoginMutation();\n  useEffect(() => {\n    isError && toast.error('Invalid email or password');\n  }, [isSuccess, isError]);\n\n  const handleInputChange = ({ currentTarget: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    userLogin({\n      email: email,\n      password: password,\n    });\n    setEmail('');\n    setPassword('');\n  };\n\n  let navigate = useNavigate();\n  let location = useLocation();\n\n  const goBack = () => {\n    navigate(location?.state?.from || '/');\n  };\n\n  return (\n    <Flex\n      minH={'100vh'}\n      align={'center'}\n      justify={'center'}\n      bg={useColorModeValue('gray.50', 'gray.800')}\n    >\n      {isSuccess && <Navigate to=\"/contacts\" replace={true} />}\n\n      <Stack spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>\n        <Stack align={'center'}>\n          <Heading fontSize={'4xl'} color={'blue.500'}>\n            Sign in to your account\n          </Heading>\n        </Stack>\n        <Box\n          as=\"form\"\n          rounded={'lg'}\n          bg={useColorModeValue('white', 'gray.700')}\n          boxShadow={'lg'}\n          p={8}\n          autoComplete=\"off\"\n          onSubmit={handleSubmit}\n        >\n          <Stack spacing={4}>\n            <FormControl id=\"email\">\n              <FormLabel>Email address</FormLabel>\n              <Input\n                type=\"email\"\n                pattern=\"^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$\"\n                required\n                onChange={handleInputChange}\n                name=\"email\"\n                value={email}\n              />\n            </FormControl>\n            <FormControl id=\"password\">\n              <FormLabel>Password</FormLabel>\n              <Input\n                type=\"password\"\n                onChange={handleInputChange}\n                value={password}\n                name=\"password\"\n              />\n            </FormControl>\n            <Stack spacing={10}>\n              <Button\n                disabled={email && password ? false : true}\n                type=\"submit\"\n                bg={'blue.400'}\n                color={'white'}\n                _hover={{\n                  bg: 'blue.500',\n                }}\n              >\n                Sign in\n              </Button>\n              <Stack\n                direction={{ base: 'column', sm: 'row' }}\n                align={'start'}\n                justify={'center'}\n              >\n                <Button\n                  type=\"button\"\n                  onClick={goBack}\n                  colorScheme=\"gray\"\n                  variant=\"outline\"\n                >\n                  goBack\n                </Button>\n              </Stack>\n            </Stack>\n          </Stack>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n}\n"],"names":["LoginView","useState","email","setEmail","password","setPassword","useUserLoginMutation","userLogin","isSuccess","isError","useEffect","toast","handleInputChange","currentTarget","name","value","navigate","useNavigate","location","useLocation","minH","align","justify","bg","useColorModeValue","to","replace","spacing","mx","maxW","py","px","fontSize","color","as","rounded","boxShadow","p","autoComplete","onSubmit","e","preventDefault","id","type","pattern","required","onChange","disabled","_hover","direction","base","sm","onClick","state","from","colorScheme","variant"],"sourceRoot":""}