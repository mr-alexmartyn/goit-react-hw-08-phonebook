{"version":3,"file":"static/js/607.c5335867.chunk.js","mappings":"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","sources":["views/SingUpView.jsx"],"sourcesContent":["import {\n  Flex,\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Stack,\n  Button,\n  Heading,\n  Text,\n  useColorModeValue,\n  Link,\n} from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\nimport { Navigate, useNavigate, useLocation, NavLink } from 'react-router-dom';\nimport { useUserSignupMutation } from 'redux/AuthApi';\n\nexport default function SignupView() {\n  const [showPassword, setShowPassword] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userSignup, { isSuccess }] = useUserSignupMutation();\n\n  const handleInputChange = ({ currentTarget: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await userSignup({ name, email, password });\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  let navigate = useNavigate();\n  let location = useLocation();\n\n  const goBack = () => {\n    navigate(location?.state?.from || '/');\n  };\n  return (\n    <Flex\n      minH={'100vh'}\n      align={'center'}\n      justify={'center'}\n      bg={useColorModeValue('gray.50', 'gray.800')}\n    >\n      {isSuccess && <Navigate to=\"/contacts\" replace={true} />}\n\n      <Stack spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>\n        <Stack align={'center'}>\n          <Heading fontSize={'4xl'} textAlign={'center'}>\n            Sign up\n          </Heading>\n        </Stack>\n        <Box\n          as=\"form\"\n          rounded={'lg'}\n          bg={useColorModeValue('white', 'gray.700')}\n          boxShadow={'lg'}\n          onSubmit={handleSubmit}\n          p={8}\n        >\n          <Stack spacing={4}>\n            <FormControl id=\"firstName\" isRequired>\n              <FormLabel>Name</FormLabel>\n              <Input\n                type=\"text\"\n                value={name}\n                name=\"name\"\n                onChange={handleInputChange}\n              />\n            </FormControl>\n            <FormControl id=\"email\" isRequired>\n              <FormLabel>Email address</FormLabel>\n              <Input\n                pattern=\"^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$\"\n                onChange={handleInputChange}\n                type=\"email\"\n                value={email}\n                name=\"email\"\n              />\n            </FormControl>\n            <FormControl id=\"password\" isRequired>\n              <FormLabel>Password</FormLabel>\n              <InputGroup>\n                <Input\n                  onChange={handleInputChange}\n                  type={showPassword ? 'text' : 'password'}\n                  value={password}\n                  minLength={7}\n                  name=\"password\"\n                />\n                <InputRightElement h={'full'}>\n                  <Button\n                    variant={'ghost'}\n                    onClick={() =>\n                      setShowPassword(showPassword => !showPassword)\n                    }\n                  >\n                    {showPassword ? <ViewIcon /> : <ViewOffIcon />}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n            </FormControl>\n            <Stack spacing={10} pt={2}>\n              <Button\n                type=\"submit\"\n                disabled={name && email && password ? false : true}\n                loadingText=\"Submitting\"\n                size=\"lg\"\n                bg={'blue.400'}\n                color={'white'}\n                _hover={{\n                  bg: 'blue.500',\n                }}\n              >\n                Sign up\n              </Button>\n            </Stack>\n            <Stack\n              direction={{ base: 'column', sm: 'row' }}\n              align={'start'}\n              justify={'center'}\n            >\n              <Button type=\"button\" onClick={goBack}>\n                goBack\n              </Button>\n            </Stack>\n            <Stack pt={6}>\n              <Text align={'center'}>\n                Already a user?{' '}\n                <Link color={'blue.400'} as={NavLink} to=\"/login\">\n                  Login\n                </Link>\n              </Text>\n            </Stack>\n          </Stack>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n}\n"],"names":["SignupView","useState","showPassword","setShowPassword","name","setName","email","setEmail","password","setPassword","useUserSignupMutation","userSignup","isSuccess","handleInputChange","currentTarget","value","handleSubmit","e","preventDefault","navigate","useNavigate","location","useLocation","minH","align","justify","bg","useColorModeValue","to","replace","spacing","mx","maxW","py","px","fontSize","textAlign","as","rounded","boxShadow","onSubmit","p","id","isRequired","type","onChange","pattern","minLength","h","variant","onClick","pt","disabled","loadingText","size","color","_hover","direction","base","sm","state","from","NavLink"],"sourceRoot":""}