{"version":3,"file":"static/js/753.39a2fed6.chunk.js","mappings":"sOAMA,SAASA,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,GAGFH,EAASY,MAAMC,KAAMR,WAG9B,IAAIS,EAAsBC,EAAAA,GAAYC,EAAAA,gBAAkBC,EAAAA,UAQxD,SAASC,EAAcC,EAAOC,GAC5B,IAAIC,GAAMC,EAAAA,EAAAA,KACNC,EAAUC,MAAMC,QAAQN,GAASA,EAAQ,CAACA,GAC1CO,EAAWF,MAAMC,QAAQL,GAAiBA,EAAgB,CAACA,GAC/DM,EAAWA,EAASC,QAAO,SAAUC,GACnC,OAAY,MAALA,KAGT,IAAIC,GAAYC,EAAAA,EAAAA,WAAS,WACvB,OAAKf,EAAAA,GAWEQ,EAAQQ,KAAI,SAAUZ,GAC3B,MAAO,CACLa,MAAOb,EACPc,QAASZ,EAAIa,OAAOC,WAAWhB,GAAOc,YAbjCV,EAAQQ,KAAI,SAAUZ,EAAOiB,GAClC,IAAIC,EAEJ,MAAO,CACLL,MAAOb,EACPc,QAAgD,OAAtCI,EAAkBX,EAASU,KAAkBC,SAY3DC,EAAQT,EAAU,GAClBU,EAAWV,EAAU,GA4BzB,OA1BAf,GAAoB,WAClB,GAAKC,EAAAA,GAAL,CAEA,IAAIyB,EAAU,SAAiBC,GAC7BF,GAAS,SAAUG,GACjB,OAAOA,EAAKC,QAAQZ,KAAI,SAAUa,GAChC,OAAIA,EAAKZ,QAAUS,EAAIT,MAAchC,EAAS,GAAI4C,EAAM,CACtDX,QAASQ,EAAIR,UAERW,SAKTC,EAAMtB,EAAQQ,KAAI,SAAUZ,GAC9B,OAAOE,EAAIa,OAAOC,WAAWhB,MAK/B,OAHA0B,EAAIC,SAAQ,SAAUD,GACW,oBAApBA,EAAIE,YAA4BF,EAAIE,YAAYP,GAAcK,EAAIG,iBAAiB,SAAUR,MAEnG,WACLK,EAAIC,SAAQ,SAAUD,GACc,oBAAvBA,EAAII,eAA+BJ,EAAII,eAAeT,GAAcK,EAAIK,oBAAoB,SAAUV,UAGpH,IACIF,EAAMP,KAAI,SAAUa,GACzB,OAAOA,EAAKX,WAgCZkB,EAAAA,GAYAA,EAAAA,GA0IJ,SAASC,EAAmBC,EAAQC,GAClC,IAAIC,EAEAC,EAhFN,SAAuBF,GAErB,IAAIG,EAAuBC,OAED,IAAtBJ,IACFA,EAAoB,QAGtB,IAEIK,GAFQC,EAAAA,EAAAA,MAEYC,cAAcC,QAAQ/B,KAAI,SAAUgC,GAC1D,IAAIC,EAAcD,EAAKC,YAEvB,MAAO,CACLR,WAFeO,EAAKP,WAGpBrC,MAAO6C,EAAYC,QAAQ,qBAAsB,QAIjDZ,EAASnC,EAAcyC,EAAY5B,KAAI,SAAUmC,GACnD,OAAOA,EAAG/C,SACRwC,EAAY5B,KAAI,SAAUmC,GAC5B,OAAOA,EAAGV,aAAeF,MAK3B,OAA+H,OAAvHG,EAAqE,OAA5CC,EAAqBC,EAH1CN,EAAOc,WAAU,SAAU7B,GACrC,OAAgB,GAATA,YAE2E,EAASoB,EAAmBF,YAAsBC,EAAwBH,EAqD7Ic,CAAcd,GAC3Be,GAAQT,EAAAA,EAAAA,MACZ,GAAKJ,EAAL,CAKA,IAAIG,EAAcnC,MAAM8C,MAAsD,OAA/Cf,EAAuBc,EAAMR,oBAAyB,EAASN,EAAqBgB,OAAS,IAM5H,OA/DF,SAAyBlB,EAAQG,EAAYgB,QACrB,IAAlBA,IACFA,EAAgBb,EAAAA,IAGlB,IAAIvB,EAAQnC,OAAOsE,KAAKlB,GAAQoB,QAAQjB,GAExC,IAAe,IAAXpB,EACF,OAAOiB,EAAOG,GAKhB,IAFA,IAAIkB,EAAYF,EAAcC,QAAQjB,GAE/BkB,GAAa,GAAG,CAGrB,GAAmB,MAAfrB,EAFMmB,EAAcE,IAEC,CACvBtC,EAAQsC,EACR,MAGFA,GAAa,EAGf,OAAe,IAAXtC,EAEKiB,EADImB,EAAcpC,SAD3B,EAuCOuC,EALGlD,EAAAA,EAAAA,IAAQ4B,IAAUuB,EAAAA,EAAAA,IAAY3E,OAAO4E,SAAQC,EAAAA,EAAAA,IAAsBzB,EAAQM,IAAc5B,KAAI,SAAUgC,GAG/G,MAAO,CAFGA,EAAK,GACHA,EAAK,QAEbV,EACsBG,EAAYG,I,4CCrR3B,SAASoB,IACtB,OACE,SAAC,KAAD,CACEC,EAAG,OACHC,EAAG,QACHC,gBACE,0KAEFC,eAAgB,QAChBC,mBAAoB,gBAPtB,UASE,SAAC,KAAD,CACEJ,EAAG,OACHK,QAAS,SACTC,GAAIlC,EAAmB,CAAEmC,KAAM,EAAGC,GAAI,IACtCC,WAAY,4CAJd,UAME,UAAC,KAAD,CAAOC,KAAM,MAAOC,MAAO,aAAcC,QAAS,EAAlD,WACE,SAAC,KAAD,CACEC,MAAO,QACPC,WAAY,IACZC,WAAY,IACZC,SAAU5C,EAAmB,CAAEmC,KAAM,MAAOC,GAAI,QAJlD,yCAQA,UAAC,KAAD,CAAOS,UAAW,MAAlB,WACE,SAAC,KAAD,CACEC,GAAIC,EAAAA,GACJC,GAAG,WACHC,GAAI,WACJC,QAAS,OACTT,MAAO,QACPU,OAAQ,CAAEF,GAAI,YANhB,sBAUA,SAAC,KAAD,CACEH,GAAIC,EAAAA,GACJC,GAAG,QACHC,GAAI,iBACJC,QAAS,OACTT,MAAO,QACPU,OAAQ,CAAEF,GAAI,kBANhB,iC,yICxCZ,SAASG,EAA8BjG,EAAQkG,GAC7C,GAAc,MAAVlG,EAAgB,MAAO,GAC3B,IAEIC,EAAKJ,EAFLD,EAAS,GACTuG,EAAazG,OAAOsE,KAAKhE,GAG7B,IAAKH,EAAI,EAAGA,EAAIsG,EAAWpG,OAAQF,IACjCI,EAAMkG,EAAWtG,GACbqG,EAAShC,QAAQjE,IAAQ,IAC7BL,EAAOK,GAAOD,EAAOC,IAGvB,OAAOL,EAGT,SAASH,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,GAGFH,EAASY,MAAMC,KAAMR,WAG9B,IAAIsG,EAAc,CAAC,OAAQ,cAAe,UAAW,YAAa,UAAW,aAAc,cAEvFC,GAAiBC,EAAAA,EAAAA,IAAc,CACjCC,QAAQ,EACRC,KAAM,uBAEJC,EAAsBJ,EAAe,GACrCK,EAAiBL,EAAe,GAChCM,GAA2BC,EAAAA,EAAAA,KAAW,SAAUC,EAAOC,GACzD,IAAIC,EAAOF,EAAME,KACbC,EAAcH,EAAMG,YACpBC,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBC,EAAiBN,EAAMxB,QACvBA,OAA6B,IAAnB8B,EAA4B,SAAWA,EACjDC,EAAaP,EAAMO,WACnBC,EAAaR,EAAMQ,WACnBC,EAAOrB,EAA8BY,EAAOT,GAE5CmB,GAAaC,EAAAA,EAAAA,IAAG,uBAAwBN,GAExCO,EAAUC,EAAAA,SAAc,WAC1B,MAAO,CACLX,KAAMA,EACNC,YAAaA,EACbC,QAASA,EACTI,WAAYA,KAEb,CAACN,EAAMC,EAAaC,EAASI,IAC5BM,EAAc,CAChBC,QAAS,eAuBX,OAnBED,EAAclI,EAAS,GAAIkI,EADzBP,EACsC,CACtC,uCAAwC,CACtCS,gBAAiB,GAEnB,6CAA8C,CAC5CC,aAAc,GAEhB,uCAAwC,CACtCC,kBAAmB,IAIiB,CACtC,kCAAmC,CACjCC,YAAa3C,KAKCqC,EAAAA,cAAoBjB,EAAqB,CAC3D1E,MAAO0F,GACOC,EAAAA,cAAoBO,EAAAA,GAAAA,IAAYxI,EAAS,CACvDqH,IAAKA,EACLoB,KAAM,QACNC,MAAOR,EACPT,UAAWK,EACX,gBAAiBH,EAAa,QAAKgB,GAClCd,QAGD1E,EAAAA,KACF+D,EAAY0B,YAAc,eAG5B,IAAIC,EAAc,CAAC,QAAS,YAAa,UAAW,WAAY,YAAa,SACzEC,EAAgB,SAAuB1B,GACzC,IAAI2B,EAAQ3B,EAAM2B,MACdC,EAAY5B,EAAM4B,UAClBtB,EAAiBN,EAAMxB,QACvBA,OAA6B,IAAnB8B,EAA4B,SAAWA,EACjDuB,EAAkB7B,EAAM8B,SACxBA,OAA+B,IAApBD,EAA0ChB,EAAAA,cAAoBkB,EAAAA,EAAS,CACpFtD,MAAO,eACPuD,MAAO,MACPC,OAAQ,QACLJ,EACDxB,EAAYL,EAAMK,UAClBiB,EAAQtB,EAAMsB,MACdb,EAAOrB,EAA8BY,EAAOyB,GAE5Cf,GAAaC,EAAAA,EAAAA,IAAG,yBAA0BN,GAE1C6B,EAA2B,UAAdN,EAAwB,YAAc,cACnDO,EAAgBtB,EAAAA,SAAc,WAChC,IAAIuB,EAEJ,OAAOxJ,IAAUwJ,EAAY,CAC3BrB,QAAS,OACTsB,WAAY,SACZC,SAAUX,EAAQ,WAAa,aACpBO,GAAcP,EAAQnD,EAAU,EAAG4D,EAAUxD,SAAW,MAAOwD,EAAUzD,WAAa,SAAUyD,GAAYd,KACxH,CAACA,EAAOK,EAAOO,EAAY1D,IAC9B,OAAoBqC,EAAAA,cAAoBO,EAAAA,GAAAA,IAAYxI,EAAS,CAC3DyH,UAAWK,GACVD,EAAM,CACPa,MAAOa,IACLL,IAGF/F,EAAAA,KACF2F,EAAcF,YAAc,iBAG9B,IAAIe,EAAc,CAAC,WAAY,aAC3BC,EAAa,SAAoBxC,GACnC,IAAI8B,EAAW9B,EAAM8B,SACjBzB,EAAYL,EAAMK,UAClBI,EAAOrB,EAA8BY,EAAOuC,GAE5CE,EAAyB5B,EAAAA,eAAqBiB,GAAyBjB,EAAAA,aAAmBiB,EAAU,CACtG,eAAe,EACfY,WAAW,IACRZ,EAEDpB,GAAaC,EAAAA,EAAAA,IAAG,sBAAuBN,GAE3C,OAAoBQ,EAAAA,cAAoBO,EAAAA,GAAAA,KAAaxI,EAAS,CAC5DmI,QAAS,cACT4B,UAAW,SACXC,WAAY,GACXnC,EAAM,CACPJ,UAAWK,IACT+B,IAGF1G,EAAAA,KACFyG,EAAWhB,YAAc,cAmB3B,IAAIqB,EAAc,CAAC,aAAc,YAAa,WAAY,WAAY,WAAY,YAAa,cAAe,cAAe,OAAQ,UAAW,mBAAoB,YAAa,MAC7KC,GAAsB/C,EAAAA,EAAAA,KAAW,SAAUC,EAAOC,GACpD,IAAI8C,EAAQlD,IACRmD,GAASC,EAAAA,EAAAA,IAAe,SAAUrK,EAAS,GAAImK,EAAO/C,IAEtDkD,GAAoBC,EAAAA,EAAAA,IAAiBnD,GACrCoD,EAAwBF,EAAkB1C,WAC1CA,OAAuC,IAA1B4C,EAA4C,MAATL,OAAgB,EAASA,EAAMvC,WAAa4C,EAC5FC,EAAYH,EAAkBG,UAC9BC,EAAWJ,EAAkBI,SAC7BxB,EAAWoB,EAAkBpB,SAC7ByB,EAAWL,EAAkBK,SAC7BC,EAAYN,EAAkBM,UAC9BC,EAAcP,EAAkBO,YAChCC,EAAwBR,EAAkBS,YAC1CA,OAAwC,IAA1BD,EAAmC,SAAWA,EAC5DE,EAAOV,EAAkBU,KACzBC,EAAUX,EAAkBW,QAC5BC,EAAwBZ,EAAkBa,iBAC1CA,OAA6C,IAA1BD,EAAmC,QAAUA,EAChEzD,EAAY6C,EAAkB7C,UAC9BvB,EAAKoE,EAAkBpE,GACvB2B,EAAOrB,EAA8B8D,EAAmBL,GASxDmB,EAAenD,EAAAA,SAAc,WAC/B,IAAIoD,EAEAC,EAASC,GAAAA,CAAU,GAAqE,OAAhEF,EAA2B,MAAVjB,OAAiB,EAASA,EAAM,QAAsBiB,EAAiB,GAAI,CACtHG,OAAQ,IAGV,OAAOxL,EAAS,CACdmI,QAAS,cACTsD,WAAY,OACZhC,WAAY,SACZiC,eAAgB,SAChBC,WAAY,OACZjC,SAAU,WACVkC,WAAY,SACZC,cAAe,SACfC,QAAS,QACR1B,IAAUD,GAAS,CACpBmB,OAAQA,MAET,CAAClB,EAAQD,IAER4B,EArEN,SAAuBzJ,GACrB,IAAI0J,EAAkB/D,EAAAA,UAAgB3F,GAClC2J,EAAWD,EAAgB,GAC3BE,EAAcF,EAAgB,GAOlC,MAAO,CACL3E,IANgBY,EAAAA,aAAkB,SAAUkE,GACvCA,GACLD,EAA6B,WAAjBC,EAAKC,WAChB,IAIDpB,KAHSiB,EAAW,cAAWtD,GA4DZ0D,CAAcnG,GAC/BnC,EAAOgI,EAAe1E,IACtBiF,EAAcP,EAAef,KAE7BuB,EAAe,CACjB3B,UAAWA,EACXD,SAAUA,EACVI,YAAaA,EACb7B,SAAUA,GAEZ,OAAoBjB,EAAAA,cAAoBO,EAAAA,GAAAA,OAAexI,EAAS,CAC9DwM,SAAU5E,GAAc6C,EACxBpD,KAAKoF,EAAAA,EAAAA,IAAapF,EAAKtD,GACvBmC,GAAIA,EACJ8E,KAAc,MAARA,EAAeA,EAAOsB,EAC5B,eAAeI,EAAAA,EAAAA,IAAShC,GACxB,gBAAgBgC,EAAAA,EAAAA,IAASjC,GACzB/B,MAAO0C,EACP3D,WAAWM,EAAAA,EAAAA,IAAG,gBAAiBN,IAC9BI,GAAO4C,GAAkC,UAArBU,GAA6ClD,EAAAA,cAAoBa,EAAe,CACrGrB,UAAW,gCACXsB,MAAO8B,EACP7B,UAAW,QACXpD,QAASmF,GACRE,GAAUR,EAAYI,GAA4B5C,EAAAA,cAAoBO,EAAAA,GAAAA,KAAa,CACpFmE,QAAS,GACK1E,EAAAA,cAAoB2E,EAAeL,IAA8BtE,EAAAA,cAAoB2E,EAAeL,GAAe9B,GAAkC,QAArBU,GAA2ClD,EAAAA,cAAoBa,EAAe,CAC5NrB,UAAW,8BACXsB,MAAO8B,EACP7B,UAAW,MACXpD,QAASmF,GACRE,OAOL,SAAS2B,EAAcxF,GACrB,IAAIuD,EAAWvD,EAAMuD,SACjBC,EAAYxD,EAAMwD,UAClB1B,EAAW9B,EAAM8B,SACjB6B,EAAc3D,EAAM2D,YACxB,OAAoB9C,EAAAA,cAAoBA,EAAAA,SAAgB,KAAM0C,GAAyB1C,EAAAA,cAAoB2B,EAAY,CACrHiD,UAAW9B,GACVJ,GAAWzB,EAAU0B,GAA0B3C,EAAAA,cAAoB2B,EAAY,CAChFrB,YAAawC,GACZH,IAbDzH,EAAAA,KACF+G,EAAOtB,YAAc,UAevB,IAAIkE,EAAY,CAAC,OAAQ,WAAY,UAAW,cAC5CC,GAA0B5F,EAAAA,EAAAA,KAAW,SAAUC,EAAOC,GACxD,IAAI2F,EAAO5F,EAAM4F,KACb9D,EAAW9B,EAAM8B,SACjB+D,EAAU7F,EAAM6F,QAChBC,EAAY9F,EAAM,cAClBS,EAAOrB,EAA8BY,EAAO0F,GAM5CK,EAAUH,GAAQ9D,EAElBW,EAAyB5B,EAAAA,eAAqBkF,GAAwBlF,EAAAA,aAAmBkF,EAAS,CACpG,eAAe,EACfrD,WAAW,IACR,KAEL,OAAoB7B,EAAAA,cAAoBiC,EAAQlK,EAAS,CACvDoN,QAAS,IACT/E,aAAc4E,EAAU,YAAStE,EACjCtB,IAAKA,EACL,aAAc6F,GACbrF,GAAOgC,MAGR1G,EAAAA,KACF4J,EAAWnE,YAAc,e,uFCzTvByE,EAAsB,CACxBC,OAAQ,MACRC,KAAM,2BACNlE,OAAQ,MACRD,MAAO,MACPoE,OAAQ,OACRJ,QAAS,MACTK,SAAU,SACV7B,WAAY,SACZlC,SAAU,YAORgE,GAAiBlF,EAAAA,EAAAA,IAAO,OAAQ,CAClCmF,UAAWN,IAGTlK,EAAAA,KACFuK,EAAe9E,YAAc,kBAS/B,IAAIgF,GAAsBpF,EAAAA,EAAAA,IAAO,QAAS,CACxCmF,UAAWN,IAGTlK,EAAAA,KACFyK,EAAoBhF,YAAc,uBAGpC,I,UCxCA,SAAS5I,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,GAGFH,EAASY,MAAMC,KAAMR,WAkB9B,IAAIyM,EAAY,CAAC,QAAS,YAAa,QAAS,aAAc,aAC1De,GAAOC,EAAAA,EAAAA,IAAU,CACnB,KAAM,CACJC,UAAW,gBAEb,OAAQ,CACNA,UAAW,oBAUX5E,GAAuBhC,EAAAA,EAAAA,KAAW,SAAUC,EAAOC,GACrD,IAAI+C,GAASC,EAAAA,EAAAA,IAAe,UAAWjD,GAEnCkD,GAAoBC,EAAAA,EAAAA,IAAiBnD,GACrC4G,EAAwB1D,EAAkBvB,MAC1CA,OAAkC,IAA1BiF,EAAmC,aAAeA,EAC1DC,EAAwB3D,EAAkB4D,UAC1CA,OAAsC,IAA1BD,EAAmC,MAAQA,EACvDE,EAAwB7D,EAAkB8D,MAC1CA,OAAkC,IAA1BD,EAAmC,QAAUA,EACrDE,EAAwB/D,EAAkBgE,WAC1CA,OAAuC,IAA1BD,EAAmC,cAAgBA,EAChE5G,EAAY6C,EAAkB7C,UAC9BI,EA5CN,SAAuCtH,EAAQkG,GAC7C,GAAc,MAAVlG,EAAgB,MAAO,GAC3B,IAEIC,EAAKJ,EAFLD,EAAS,GACTuG,EAAazG,OAAOsE,KAAKhE,GAG7B,IAAKH,EAAI,EAAGA,EAAIsG,EAAWpG,OAAQF,IACjCI,EAAMkG,EAAWtG,GACbqG,EAAShC,QAAQjE,IAAQ,IAC7BL,EAAOK,GAAOD,EAAOC,IAGvB,OAAOL,EAgCIqG,CAA8B8D,EAAmBwC,GAExDhF,GAAaC,EAAAA,EAAAA,IAAG,iBAAkBN,GAElC8B,EAAgBvJ,EAAS,CAC3BmI,QAAS,eACToG,YAAa,eACbC,YAAa,QACbnG,aAAc,UACdoG,YAAaP,EACbQ,kBAAmBJ,EACnBK,gBAAiBL,EACjBM,UAAWf,EAAO,IAAMO,EAAQ,oBAC/BhE,GAEH,OAAoBnC,EAAAA,cAAoBO,EAAAA,GAAAA,IAAYxI,EAAS,CAC3DqH,IAAKA,EACLqB,MAAOa,EACP9B,UAAWK,GACVD,GAAOkB,GAAsBd,EAAAA,cAAoByF,EAAgB,KAAM3E,OAGxE5F,EAAAA,KACFgG,EAAQP,YAAc","sources":["../node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js","views/AuthNavView.jsx","../node_modules/@chakra-ui/button/dist/chakra-ui-button.esm.js","../node_modules/@chakra-ui/visually-hidden/dist/chakra-ui-visually-hidden.esm.js","../node_modules/@chakra-ui/spinner/dist/chakra-ui-spinner.esm.js"],"sourcesContent":["import { useTheme } from '@chakra-ui/system';\nimport { isBrowser, __DEV__, memoizedGet, breakpoints, isArray, fromEntries, arrayToObjectNotation } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useState, useLayoutEffect, useEffect } from 'react';\nimport { useEnvironment } from '@chakra-ui/react-env';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar useSafeLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n * @param defaultValues the default values to match\n */\n\nfunction useMediaQuery(query, defaultValues) {\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var defaults = Array.isArray(defaultValues) ? defaultValues : [defaultValues];\n  defaults = defaults.filter(function (v) {\n    return v != null;\n  });\n\n  var _useState = useState(function () {\n    if (!isBrowser) {\n      return queries.map(function (query, index) {\n        var _defaults$index;\n\n        return {\n          media: query,\n          matches: (_defaults$index = defaults[index]) != null ? _defaults$index : false\n        };\n      });\n    }\n\n    return queries.map(function (query) {\n      return {\n        media: query,\n        matches: env.window.matchMedia(query).matches\n      };\n    });\n  }),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  useSafeLayoutEffect(function () {\n    if (!isBrowser) return;\n\n    var handler = function handler(evt) {\n      setValue(function (prev) {\n        return prev.slice().map(function (item) {\n          if (item.media === evt.media) return _extends({}, item, {\n            matches: evt.matches\n          });\n          return item;\n        });\n      });\n    };\n\n    var mql = queries.map(function (query) {\n      return env.window.matchMedia(query);\n    });\n    mql.forEach(function (mql) {\n      if (typeof mql.addListener === \"function\") mql.addListener(handler);else mql.addEventListener(\"change\", handler);\n    });\n    return function () {\n      mql.forEach(function (mql) {\n        if (typeof mql.removeListener === \"function\") mql.removeListener(handler);else mql.removeEventListener(\"change\", handler);\n      });\n    };\n  }, []);\n  return value.map(function (item) {\n    return item.matches;\n  });\n}\n\n/**\n * Visibility\n *\n * React component to control the visibility of its\n * children based on the current breakpoint\n */\nvar Visibility = function Visibility(props) {\n  var breakpoint = props.breakpoint,\n      hide = props.hide,\n      children = props.children;\n\n  var _useMediaQuery = useMediaQuery(breakpoint),\n      show = _useMediaQuery[0];\n\n  var isVisible = hide ? !show : show;\n  var rendered = isVisible ? children : null;\n  return rendered;\n};\n\nvar Hide = function Hide(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true\n  }, children);\n};\n\nif (__DEV__) {\n  Hide.displayName = \"Hide\";\n}\n\nvar Show = function Show(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query\n  }, children);\n};\n\nif (__DEV__) {\n  Show.displayName = \"Show\";\n}\n\nvar getBreakpoint = function getBreakpoint(theme, value) {\n  return memoizedGet(theme, \"breakpoints.\" + value, value);\n};\n\nfunction useQuery(props) {\n  var _props$breakpoint = props.breakpoint,\n      breakpoint = _props$breakpoint === void 0 ? \"\" : _props$breakpoint,\n      below = props.below,\n      above = props.above;\n  var theme = useTheme();\n  var bpBelow = getBreakpoint(theme, below);\n  var bpAbove = getBreakpoint(theme, above);\n  var query = breakpoint;\n\n  if (bpBelow) {\n    query = \"(max-width: \" + bpBelow + \")\";\n  } else if (bpAbove) {\n    query = \"(min-width: \" + bpAbove + \")\";\n  }\n\n  return query;\n}\n\n/**\n * React hook used to get the user's animation preference.\n */\n\nfunction usePrefersReducedMotion() {\n  var _useMediaQuery = useMediaQuery(\"(prefers-reduced-motion: reduce)\"),\n      prefersReducedMotion = _useMediaQuery[0];\n\n  return prefersReducedMotion;\n}\n/**\n * React hook for getting the user's color mode preference.\n */\n\nfunction useColorModePreference() {\n  var _useMediaQuery2 = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"]),\n      isLight = _useMediaQuery2[0],\n      isDark = _useMediaQuery2[1];\n\n  if (isLight) return \"light\";\n  if (isDark) return \"dark\";\n  return undefined;\n}\n\n/**\n * React hook used to get the current responsive media breakpoint.\n *\n * @param [defaultBreakpoint=\"base\"] default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n */\n\nfunction useBreakpoint(defaultBreakpoint // default value ensures SSR+CSR consistency\n) {\n  var _breakpoints$index$br, _breakpoints$index;\n\n  if (defaultBreakpoint === void 0) {\n    defaultBreakpoint = \"base\";\n  }\n\n  var theme = useTheme();\n\n  var breakpoints = theme.__breakpoints.details.map(function (_ref) {\n    var minMaxQuery = _ref.minMaxQuery,\n        breakpoint = _ref.breakpoint;\n    return {\n      breakpoint: breakpoint,\n      query: minMaxQuery.replace(\"@media screen and \", \"\")\n    };\n  });\n\n  var values = useMediaQuery(breakpoints.map(function (bp) {\n    return bp.query;\n  }), breakpoints.map(function (bp) {\n    return bp.breakpoint === defaultBreakpoint;\n  }));\n  var index = values.findIndex(function (value) {\n    return value == true;\n  });\n  return (_breakpoints$index$br = (_breakpoints$index = breakpoints[index]) == null ? void 0 : _breakpoints$index.breakpoint) != null ? _breakpoints$index$br : defaultBreakpoint;\n}\n\nfunction getClosestValue(values, breakpoint, breakpoints$1) {\n  if (breakpoints$1 === void 0) {\n    breakpoints$1 = breakpoints;\n  }\n\n  var index = Object.keys(values).indexOf(breakpoint);\n\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n\n  var stopIndex = breakpoints$1.indexOf(breakpoint);\n\n  while (stopIndex >= 0) {\n    var key = breakpoints$1[stopIndex];\n\n    if (values[key] != null) {\n      index = stopIndex;\n      break;\n    }\n\n    stopIndex -= 1;\n  }\n\n  if (index !== -1) {\n    var _key = breakpoints$1[index];\n    return values[_key];\n  }\n\n  return undefined;\n}\n\n/**\n * React hook for getting the value for the current breakpoint from the\n * provided responsive values object.\n *\n * @param values\n * @param [defaultBreakpoint] default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n *\n * @example\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\n */\n\nfunction useBreakpointValue(values, defaultBreakpoint) {\n  var _theme$__breakpoints;\n\n  var breakpoint = useBreakpoint(defaultBreakpoint);\n  var theme = useTheme();\n  if (!breakpoint) return undefined;\n  /**\n   * Get the sorted breakpoint keys from the provided breakpoints\n   */\n\n  var breakpoints = Array.from(((_theme$__breakpoints = theme.__breakpoints) == null ? void 0 : _theme$__breakpoints.keys) || []);\n  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(function (_ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\nexport { Hide, Show, useBreakpoint, useBreakpointValue, useColorModePreference, useMediaQuery, usePrefersReducedMotion, useQuery };\n","import {\n  Stack,\n  Flex,\n  Button,\n  Text,\n  VStack,\n  useBreakpointValue,\n} from '@chakra-ui/react';\nimport { NavLink } from 'react-router-dom';\n\nexport default function WithBackgroundImage() {\n  return (\n    <Flex\n      w={'full'}\n      h={'100vh'}\n      backgroundImage={\n        'url(https://pixabay.com/get/g035e930c7159b7bad9568d5f0728d5d3c64b3d41cda58eb4b5a87799b771c0892a6f0410636a09755efd53bd0c3dc87c9fe676d7248e49fcd9f5ad80bccce554_1280.jpg)'\n      }\n      backgroundSize={'cover'}\n      backgroundPosition={'center center'}\n    >\n      <VStack\n        w={'full'}\n        justify={'center'}\n        px={useBreakpointValue({ base: 4, md: 8 })}\n        bgGradient={'linear(to-r, blackAlpha.600, transparent)'}\n      >\n        <Stack maxW={'2xl'} align={'flex-start'} spacing={6}>\n          <Text\n            color={'white'}\n            fontWeight={700}\n            lineHeight={1.2}\n            fontSize={useBreakpointValue({ base: '3xl', md: '4xl' })}\n          >\n            Welcome to your phonebook.\n          </Text>\n          <Stack direction={'row'}>\n            <Button\n              as={NavLink}\n              to=\"register\"\n              bg={'blue.400'}\n              rounded={'full'}\n              color={'white'}\n              _hover={{ bg: 'blue.500' }}\n            >\n              Sing up\n            </Button>\n            <Button\n              as={NavLink}\n              to=\"login\"\n              bg={'whiteAlpha.300'}\n              rounded={'full'}\n              color={'white'}\n              _hover={{ bg: 'whiteAlpha.500' }}\n            >\n              Sign in\n            </Button>\n          </Stack>\n        </Stack>\n      </VStack>\n    </Flex>\n  );\n}\n","import { useMergeRefs } from '@chakra-ui/hooks';\nimport { forwardRef, chakra, useStyleConfig, omitThemingProps } from '@chakra-ui/system';\nimport { cx, __DEV__, mergeWith, dataAttr } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { createContext } from '@chakra-ui/react-utils';\nimport { Spinner } from '@chakra-ui/spinner';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar _excluded$4 = [\"size\", \"colorScheme\", \"variant\", \"className\", \"spacing\", \"isAttached\", \"isDisabled\"];\n\nvar _createContext = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n}),\n    ButtonGroupProvider = _createContext[0],\n    useButtonGroup = _createContext[1];\nvar ButtonGroup = /*#__PURE__*/forwardRef(function (props, ref) {\n  var size = props.size,\n      colorScheme = props.colorScheme,\n      variant = props.variant,\n      className = props.className,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? \"0.5rem\" : _props$spacing,\n      isAttached = props.isAttached,\n      isDisabled = props.isDisabled,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$4);\n\n  var _className = cx(\"chakra-button__group\", className);\n\n  var context = React.useMemo(function () {\n    return {\n      size: size,\n      colorScheme: colorScheme,\n      variant: variant,\n      isDisabled: isDisabled\n    };\n  }, [size, colorScheme, variant, isDisabled]);\n  var groupStyles = {\n    display: \"inline-flex\"\n  };\n\n  if (isAttached) {\n    groupStyles = _extends({}, groupStyles, {\n      \"> *:first-of-type:not(:last-of-type)\": {\n        borderEndRadius: 0\n      },\n      \"> *:not(:first-of-type):not(:last-of-type)\": {\n        borderRadius: 0\n      },\n      \"> *:not(:first-of-type):last-of-type\": {\n        borderStartRadius: 0\n      }\n    });\n  } else {\n    groupStyles = _extends({}, groupStyles, {\n      \"& > *:not(style) ~ *:not(style)\": {\n        marginStart: spacing\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ButtonGroupProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    role: \"group\",\n    __css: groupStyles,\n    className: _className,\n    \"data-attached\": isAttached ? \"\" : undefined\n  }, rest)));\n});\n\nif (__DEV__) {\n  ButtonGroup.displayName = \"ButtonGroup\";\n}\n\nvar _excluded$3 = [\"label\", \"placement\", \"spacing\", \"children\", \"className\", \"__css\"];\nvar ButtonSpinner = function ButtonSpinner(props) {\n  var label = props.label,\n      placement = props.placement,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? \"0.5rem\" : _props$spacing,\n      _props$children = props.children,\n      children = _props$children === void 0 ? /*#__PURE__*/React.createElement(Spinner, {\n    color: \"currentColor\",\n    width: \"1em\",\n    height: \"1em\"\n  }) : _props$children,\n      className = props.className,\n      __css = props.__css,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$3);\n\n  var _className = cx(\"chakra-button__spinner\", className);\n\n  var marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  var spinnerStyles = React.useMemo(function () {\n    var _extends2;\n\n    return _extends((_extends2 = {\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\"\n    }, _extends2[marginProp] = label ? spacing : 0, _extends2.fontSize = \"1em\", _extends2.lineHeight = \"normal\", _extends2), __css);\n  }, [__css, label, marginProp, spacing]);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: _className\n  }, rest, {\n    __css: spinnerStyles\n  }), children);\n};\n\nif (__DEV__) {\n  ButtonSpinner.displayName = \"ButtonSpinner\";\n}\n\nvar _excluded$2 = [\"children\", \"className\"];\nvar ButtonIcon = function ButtonIcon(props) {\n  var children = props.children,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$2);\n\n  var _children = /*#__PURE__*/React.isValidElement(children) ? /*#__PURE__*/React.cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n\n  var _className = cx(\"chakra-button__icon\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    display: \"inline-flex\",\n    alignSelf: \"center\",\n    flexShrink: 0\n  }, rest, {\n    className: _className\n  }), _children);\n};\n\nif (__DEV__) {\n  ButtonIcon.displayName = \"ButtonIcon\";\n}\n\nfunction useButtonType(value) {\n  var _React$useState = React.useState(!value),\n      isButton = _React$useState[0],\n      setIsButton = _React$useState[1];\n\n  var refCallback = React.useCallback(function (node) {\n    if (!node) return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  var type = isButton ? \"button\" : undefined;\n  return {\n    ref: refCallback,\n    type: type\n  };\n}\n\nvar _excluded$1 = [\"isDisabled\", \"isLoading\", \"isActive\", \"children\", \"leftIcon\", \"rightIcon\", \"loadingText\", \"iconSpacing\", \"type\", \"spinner\", \"spinnerPlacement\", \"className\", \"as\"];\nvar Button = /*#__PURE__*/forwardRef(function (props, ref) {\n  var group = useButtonGroup();\n  var styles = useStyleConfig(\"Button\", _extends({}, group, props));\n\n  var _omitThemingProps = omitThemingProps(props),\n      _omitThemingProps$isD = _omitThemingProps.isDisabled,\n      isDisabled = _omitThemingProps$isD === void 0 ? group == null ? void 0 : group.isDisabled : _omitThemingProps$isD,\n      isLoading = _omitThemingProps.isLoading,\n      isActive = _omitThemingProps.isActive,\n      children = _omitThemingProps.children,\n      leftIcon = _omitThemingProps.leftIcon,\n      rightIcon = _omitThemingProps.rightIcon,\n      loadingText = _omitThemingProps.loadingText,\n      _omitThemingProps$ico = _omitThemingProps.iconSpacing,\n      iconSpacing = _omitThemingProps$ico === void 0 ? \"0.5rem\" : _omitThemingProps$ico,\n      type = _omitThemingProps.type,\n      spinner = _omitThemingProps.spinner,\n      _omitThemingProps$spi = _omitThemingProps.spinnerPlacement,\n      spinnerPlacement = _omitThemingProps$spi === void 0 ? \"start\" : _omitThemingProps$spi,\n      className = _omitThemingProps.className,\n      as = _omitThemingProps.as,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded$1);\n  /**\n   * When button is used within ButtonGroup (i.e. flushed with sibling buttons),\n   * it is important to add a `zIndex` on focus.\n   *\n   * So let's read the component styles and then add `zIndex` to it.\n   */\n\n\n  var buttonStyles = React.useMemo(function () {\n    var _styles$_focus;\n\n    var _focus = mergeWith({}, (_styles$_focus = styles == null ? void 0 : styles[\"_focus\"]) != null ? _styles$_focus : {}, {\n      zIndex: 1\n    });\n\n    return _extends({\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\"\n    }, styles, !!group && {\n      _focus: _focus\n    });\n  }, [styles, group]);\n\n  var _useButtonType = useButtonType(as),\n      _ref = _useButtonType.ref,\n      defaultType = _useButtonType.type;\n\n  var contentProps = {\n    rightIcon: rightIcon,\n    leftIcon: leftIcon,\n    iconSpacing: iconSpacing,\n    children: children\n  };\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({\n    disabled: isDisabled || isLoading,\n    ref: useMergeRefs(ref, _ref),\n    as: as,\n    type: type != null ? type : defaultType,\n    \"data-active\": dataAttr(isActive),\n    \"data-loading\": dataAttr(isLoading),\n    __css: buttonStyles,\n    className: cx(\"chakra-button\", className)\n  }, rest), isLoading && spinnerPlacement === \"start\" && /*#__PURE__*/React.createElement(ButtonSpinner, {\n    className: \"chakra-button__spinner--start\",\n    label: loadingText,\n    placement: \"start\",\n    spacing: iconSpacing\n  }, spinner), isLoading ? loadingText || /*#__PURE__*/React.createElement(chakra.span, {\n    opacity: 0\n  }, /*#__PURE__*/React.createElement(ButtonContent, contentProps)) : /*#__PURE__*/React.createElement(ButtonContent, contentProps), isLoading && spinnerPlacement === \"end\" && /*#__PURE__*/React.createElement(ButtonSpinner, {\n    className: \"chakra-button__spinner--end\",\n    label: loadingText,\n    placement: \"end\",\n    spacing: iconSpacing\n  }, spinner));\n});\n\nif (__DEV__) {\n  Button.displayName = \"Button\";\n}\n\nfunction ButtonContent(props) {\n  var leftIcon = props.leftIcon,\n      rightIcon = props.rightIcon,\n      children = props.children,\n      iconSpacing = props.iconSpacing;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, leftIcon && /*#__PURE__*/React.createElement(ButtonIcon, {\n    marginEnd: iconSpacing\n  }, leftIcon), children, rightIcon && /*#__PURE__*/React.createElement(ButtonIcon, {\n    marginStart: iconSpacing\n  }, rightIcon));\n}\n\nvar _excluded = [\"icon\", \"children\", \"isRound\", \"aria-label\"];\nvar IconButton = /*#__PURE__*/forwardRef(function (props, ref) {\n  var icon = props.icon,\n      children = props.children,\n      isRound = props.isRound,\n      ariaLabel = props[\"aria-label\"],\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n  /**\n   * Passing the icon as prop or children should work\n   */\n\n\n  var element = icon || children;\n\n  var _children = /*#__PURE__*/React.isValidElement(element) ? /*#__PURE__*/React.cloneElement(element, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : null;\n\n  return /*#__PURE__*/React.createElement(Button, _extends({\n    padding: \"0\",\n    borderRadius: isRound ? \"full\" : undefined,\n    ref: ref,\n    \"aria-label\": ariaLabel\n  }, rest), _children);\n});\n\nif (__DEV__) {\n  IconButton.displayName = \"IconButton\";\n}\n\nexport { Button, ButtonGroup, ButtonSpinner, IconButton, useButtonGroup };\n","import { chakra } from '@chakra-ui/system';\nimport { __DEV__ } from '@chakra-ui/utils';\n\n/**\n * Styles to visually hide an element\n * but make it accessible to screen-readers\n */\nvar visuallyHiddenStyle = {\n  border: \"0px\",\n  clip: \"rect(0px, 0px, 0px, 0px)\",\n  height: \"1px\",\n  width: \"1px\",\n  margin: \"-1px\",\n  padding: \"0px\",\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  position: \"absolute\"\n};\n/**\n * Visually hidden component used to hide\n * elements on screen\n */\n\nvar VisuallyHidden = chakra(\"span\", {\n  baseStyle: visuallyHiddenStyle\n});\n\nif (__DEV__) {\n  VisuallyHidden.displayName = \"VisuallyHidden\";\n}\n/**\n * Visually hidden input component for designing\n * custom input components using the html `input`\n * as a proxy\n */\n\n\nvar VisuallyHiddenInput = chakra(\"input\", {\n  baseStyle: visuallyHiddenStyle\n});\n\nif (__DEV__) {\n  VisuallyHiddenInput.displayName = \"VisuallyHiddenInput\";\n}\n\nvar VisuallyHidden$1 = VisuallyHidden;\n\nexport { VisuallyHidden, VisuallyHiddenInput, VisuallyHidden$1 as default, visuallyHiddenStyle };\n","import { keyframes, forwardRef, useStyleConfig, omitThemingProps, chakra } from '@chakra-ui/system';\nimport { cx, __DEV__ } from '@chakra-ui/utils';\nimport { VisuallyHidden } from '@chakra-ui/visually-hidden';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"label\", \"thickness\", \"speed\", \"emptyColor\", \"className\"];\nvar spin = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\n\n/**\n * Spinner is used to indicate the loading state of a page or a component,\n * It renders a `div` by default.\n *\n * @see Docs https://chakra-ui.com/spinner\n */\nvar Spinner = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Spinner\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      _omitThemingProps$lab = _omitThemingProps.label,\n      label = _omitThemingProps$lab === void 0 ? \"Loading...\" : _omitThemingProps$lab,\n      _omitThemingProps$thi = _omitThemingProps.thickness,\n      thickness = _omitThemingProps$thi === void 0 ? \"2px\" : _omitThemingProps$thi,\n      _omitThemingProps$spe = _omitThemingProps.speed,\n      speed = _omitThemingProps$spe === void 0 ? \"0.45s\" : _omitThemingProps$spe,\n      _omitThemingProps$emp = _omitThemingProps.emptyColor,\n      emptyColor = _omitThemingProps$emp === void 0 ? \"transparent\" : _omitThemingProps$emp,\n      className = _omitThemingProps.className,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var _className = cx(\"chakra-spinner\", className);\n\n  var spinnerStyles = _extends({\n    display: \"inline-block\",\n    borderColor: \"currentColor\",\n    borderStyle: \"solid\",\n    borderRadius: \"99999px\",\n    borderWidth: thickness,\n    borderBottomColor: emptyColor,\n    borderLeftColor: emptyColor,\n    animation: spin + \" \" + speed + \" linear infinite\"\n  }, styles);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: spinnerStyles,\n    className: _className\n  }, rest), label && /*#__PURE__*/React.createElement(VisuallyHidden, null, label));\n});\n\nif (__DEV__) {\n  Spinner.displayName = \"Spinner\";\n}\n\nexport { Spinner };\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","useSafeLayoutEffect","isBrowser","useLayoutEffect","useEffect","useMediaQuery","query","defaultValues","env","useEnvironment","queries","Array","isArray","defaults","filter","v","_useState","useState","map","media","matches","window","matchMedia","index","_defaults$index","value","setValue","handler","evt","prev","slice","item","mql","forEach","addListener","addEventListener","removeListener","removeEventListener","__DEV__","useBreakpointValue","values","defaultBreakpoint","_theme$__breakpoints","breakpoint","_breakpoints$index$br","_breakpoints$index","breakpoints","useTheme","__breakpoints","details","_ref","minMaxQuery","replace","bp","findIndex","useBreakpoint","theme","from","keys","breakpoints$1","indexOf","stopIndex","getClosestValue","fromEntries","entries","arrayToObjectNotation","WithBackgroundImage","w","h","backgroundImage","backgroundSize","backgroundPosition","justify","px","base","md","bgGradient","maxW","align","spacing","color","fontWeight","lineHeight","fontSize","direction","as","NavLink","to","bg","rounded","_hover","_objectWithoutPropertiesLoose","excluded","sourceKeys","_excluded$4","_createContext","createContext","strict","name","ButtonGroupProvider","useButtonGroup","ButtonGroup","forwardRef","props","ref","size","colorScheme","variant","className","_props$spacing","isAttached","isDisabled","rest","_className","cx","context","React","groupStyles","display","borderEndRadius","borderRadius","borderStartRadius","marginStart","chakra","role","__css","undefined","displayName","_excluded$3","ButtonSpinner","label","placement","_props$children","children","Spinner","width","height","marginProp","spinnerStyles","_extends2","alignItems","position","_excluded$2","ButtonIcon","_children","focusable","alignSelf","flexShrink","_excluded$1","Button","group","styles","useStyleConfig","_omitThemingProps","omitThemingProps","_omitThemingProps$isD","isLoading","isActive","leftIcon","rightIcon","loadingText","_omitThemingProps$ico","iconSpacing","type","spinner","_omitThemingProps$spi","spinnerPlacement","buttonStyles","_styles$_focus","_focus","mergeWith","zIndex","appearance","justifyContent","userSelect","whiteSpace","verticalAlign","outline","_useButtonType","_React$useState","isButton","setIsButton","node","tagName","useButtonType","defaultType","contentProps","disabled","useMergeRefs","dataAttr","opacity","ButtonContent","marginEnd","_excluded","IconButton","icon","isRound","ariaLabel","element","padding","visuallyHiddenStyle","border","clip","margin","overflow","VisuallyHidden","baseStyle","VisuallyHiddenInput","spin","keyframes","transform","_omitThemingProps$lab","_omitThemingProps$thi","thickness","_omitThemingProps$spe","speed","_omitThemingProps$emp","emptyColor","borderColor","borderStyle","borderWidth","borderBottomColor","borderLeftColor","animation"],"sourceRoot":""}